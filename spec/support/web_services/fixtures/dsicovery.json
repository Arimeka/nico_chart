{
 "kind": "discovery#restDescription",
 "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/KXsApYF7ntO41AJammD4suORnPk\"",
 "discoveryVersion": "v1",
 "id": "youtube:v3",
 "name": "youtube",
 "canonicalName": "YouTube",
 "version": "v3",
 "revision": "20150327",
 "title": "YouTube Data API",
 "description": "Programmatic access to YouTube features.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "https://www.google.com/images/icons/product/youtube-16.png",
  "x32": "https://www.google.com/images/icons/product/youtube-32.png"
 },
 "documentationLink": "https://developers.google.com/youtube/v3",
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/youtube/v3/",
 "basePath": "/youtube/v3/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "youtube/v3/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "ResourceId": {
   "id": "ResourceId",
   "type": "object",
   "description": "A resource id is a generic reference that points to another YouTube resource.",
   "properties": {
    "channelId": {
     "type": "string",
     "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
    },
    "kind": {
     "type": "string",
     "description": "The type of the API resource."
    },
    "playlistId": {
     "type": "string",
     "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
    },
    "videoId": {
     "type": "string",
     "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
    }
   }
  },
  "SearchListResponse": {
   "id": "SearchListResponse",
   "type": "object",
   "properties": {
    "etag": {
     "type": "string",
     "description": "Etag of this resource."
    },
    "eventId": {
     "type": "string",
     "description": "Serialized EventId of the request which produced this response."
    },
    "items": {
     "type": "array",
     "description": "A list of results that match the search criteria.",
     "items": {
      "$ref": "SearchResult"
     }
    },
    "kind": {
     "type": "string",
     "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#searchListResponse\".",
     "default": "youtube#searchListResponse"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."
    },
    "pageInfo": {
     "$ref": "PageInfo"
    },
    "prevPageToken": {
     "type": "string",
     "description": "The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set."
    },
    "tokenPagination": {
     "$ref": "TokenPagination"
    },
    "visitorId": {
     "type": "string",
     "description": "The visitorId identifies the visitor."
    }
   }
  },
  "SearchResult": {
   "id": "SearchResult",
   "type": "object",
   "description": "A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request. While a search result points to a uniquely identifiable resource, like a video, it does not have its own persistent data.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "Etag of this resource."
    },
    "id": {
     "$ref": "ResourceId",
     "description": "The id object contains information that can be used to uniquely identify the resource that matches the search request."
    },
    "kind": {
     "type": "string",
     "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#searchResult\".",
     "default": "youtube#searchResult"
    },
    "snippet": {
     "$ref": "SearchResultSnippet",
     "description": "The snippet object contains basic details about a search result, such as its title or description. For example, if the search result is a video, then the title will be the video's title and the description will be the video's description."
    }
   }
  },
  "SearchResultSnippet": {
   "id": "SearchResultSnippet",
   "type": "object",
   "description": "Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.",
   "properties": {
    "channelId": {
     "type": "string",
     "description": "The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies."
    },
    "channelTitle": {
     "type": "string",
     "description": "The title of the channel that published the resource that the search result identifies."
    },
    "description": {
     "type": "string",
     "description": "A description of the search result."
    },
    "liveBroadcastContent": {
     "type": "string",
     "description": "It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's \"none\" if there is not any upcoming/active live broadcasts.",
     "enum": [
      "live",
      "none",
      "upcoming"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "publishedAt": {
     "type": "string",
     "description": "The creation date and time of the resource that the search result identifies. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
     "format": "date-time"
    },
    "thumbnails": {
     "$ref": "ThumbnailDetails",
     "description": "A map of thumbnail images associated with the search result. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail."
    },
    "title": {
     "type": "string",
     "description": "The title of the search result."
    }
   }
  }
 },
 "resources": {
  "search": {
   "methods": {
    "list": {
     "id": "youtube.search.list",
     "path": "search",
     "httpMethod": "GET",
     "description": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.",
     "parameters": {
      "channelId": {
       "type": "string",
       "description": "The channelId parameter indicates that the API response should only contain resources created by the channel",
       "location": "query"
      },
      "channelType": {
       "type": "string",
       "description": "The channelType parameter lets you restrict a search to a particular type of channel.",
       "enum": [
        "any",
        "show"
       ],
       "enumDescriptions": [
        "Return all channels.",
        "Only retrieve shows."
       ],
       "location": "query"
      },
      "eventType": {
       "type": "string",
       "description": "The eventType parameter restricts a search to broadcast events.",
       "enum": [
        "completed",
        "live",
        "upcoming"
       ],
       "enumDescriptions": [
        "Only include completed broadcasts.",
        "Only include active broadcasts.",
        "Only include upcoming broadcasts."
       ],
       "location": "query"
      },
      "forContentOwner": {
       "type": "boolean",
       "description": "Note: This parameter is intended exclusively for YouTube content partners.\n\nThe forContentOwner parameter restricts the search to only retrieve resources owned by the content owner specified by the onBehalfOfContentOwner parameter. The user must be authenticated using a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.",
       "location": "query"
      },
      "forDeveloper": {
       "type": "boolean",
       "description": "The forDeveloper parameter restricts the search to only retrieve videos uploaded via the developer's application or website. The API server uses the request's authorization credentials to identify the developer. Therefore, a developer can restrict results to videos uploaded through the developer's own app or website but not to videos uploaded through other apps or sites.",
       "location": "query"
      },
      "forMine": {
       "type": "boolean",
       "description": "The forMine parameter restricts the search to only retrieve videos owned by the authenticated user. If you set this parameter to true, then the type parameter's value must also be set to video.",
       "location": "query"
      },
      "location": {
       "type": "string",
       "description": "The location parameter restricts a search to videos that have a geographical location specified in their metadata. The value is a string that specifies geographic latitude/longitude coordinates e.g. (37.42307,-122.08427)",
       "location": "query"
      },
      "locationRadius": {
       "type": "string",
       "description": "The locationRadius, in conjunction with the location parameter, defines a geographic area. If the geographic coordinates associated with a video fall within that area, then the video may be included in search results. This parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft, and mi. For example, valid parameter values include 1500m, 5km, 10000ft, and 0.75mi. The API does not support locationRadius parameter values larger than 1000 kilometers.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
       "default": "5",
       "format": "uint32",
       "minimum": "0",
       "maximum": "50",
       "location": "query"
      },
      "onBehalfOfContentOwner": {
       "type": "string",
       "description": "Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
       "location": "query"
      },
      "order": {
       "type": "string",
       "description": "The order parameter specifies the method that will be used to order resources in the API response.",
       "default": "SEARCH_SORT_RELEVANCE",
       "enum": [
        "date",
        "rating",
        "relevance",
        "title",
        "videoCount",
        "viewCount"
       ],
       "enumDescriptions": [
        "Resources are sorted in reverse chronological order based on the date they were created.",
        "Resources are sorted from highest to lowest rating.",
        "Resources are sorted based on their relevance to the search query. This is the default value for this parameter.",
        "Resources are sorted alphabetically by title.",
        "Channels are sorted in descending order of their number of uploaded videos.",
        "Resources are sorted from highest to lowest number of views."
       ],
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
       "location": "query"
      },
      "part": {
       "type": "string",
       "description": "The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a search result, the snippet property contains other properties that identify the result's title, description, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.",
       "required": true,
       "location": "query"
      },
      "publishedAfter": {
       "type": "string",
       "description": "The publishedAfter parameter indicates that the API response should only contain resources created after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
       "format": "date-time",
       "location": "query"
      },
      "publishedBefore": {
       "type": "string",
       "description": "The publishedBefore parameter indicates that the API response should only contain resources created before the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
       "format": "date-time",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "The q parameter specifies the query term to search for.",
       "location": "query"
      },
      "regionCode": {
       "type": "string",
       "description": "The regionCode parameter instructs the API to return search results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
       "location": "query"
      },
      "relatedToVideoId": {
       "type": "string",
       "description": "The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video.",
       "location": "query"
      },
      "relevanceLanguage": {
       "type": "string",
       "description": "The relevanceLanguage parameter instructs the API to return search results that are most relevant to the specified language. The parameter value is typically an ISO 639-1 two-letter language code. However, you should use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese. Please note that results in other languages will still be returned if they are highly relevant to the search query term.",
       "location": "query"
      },
      "safeSearch": {
       "type": "string",
       "description": "The safeSearch parameter indicates whether the search results should include restricted content as well as standard content.",
       "enum": [
        "moderate",
        "none",
        "strict"
       ],
       "enumDescriptions": [
        "YouTube will filter some content from search results and, at the least, will filter content that is restricted in your locale. Based on their content, search results could be removed from search results or demoted in search results. This is the default parameter value.",
        "YouTube will not filter the search result set.",
        "YouTube will try to exclude all restricted content from the search result set. Based on their content, search results could be removed from search results or demoted in search results."
       ],
       "location": "query"
      },
      "topicId": {
       "type": "string",
       "description": "The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.",
       "location": "query"
      },
      "type": {
       "type": "string",
       "description": "The type parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types.",
       "default": "video,channel,playlist",
       "location": "query"
      },
      "videoCaption": {
       "type": "string",
       "description": "The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions.",
       "enum": [
        "any",
        "closedCaption",
        "none"
       ],
       "enumDescriptions": [
        "Do not filter results based on caption availability.",
        "Only include videos that have captions.",
        "Only include videos that do not have captions."
       ],
       "location": "query"
      },
      "videoCategoryId": {
       "type": "string",
       "description": "The videoCategoryId parameter filters video search results based on their category.",
       "location": "query"
      },
      "videoDefinition": {
       "type": "string",
       "description": "The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available.",
       "enum": [
        "any",
        "high",
        "standard"
       ],
       "enumDescriptions": [
        "Return all videos, regardless of their resolution.",
        "Only retrieve HD videos.",
        "Only retrieve videos in standard definition."
       ],
       "location": "query"
      },
      "videoDimension": {
       "type": "string",
       "description": "The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos.",
       "enum": [
        "2d",
        "3d",
        "any"
       ],
       "enumDescriptions": [
        "Restrict search results to exclude 3D videos.",
        "Restrict search results to only include 3D videos.",
        "Include both 3D and non-3D videos in returned results. This is the default value."
       ],
       "location": "query"
      },
      "videoDuration": {
       "type": "string",
       "description": "The videoDuration parameter filters video search results based on their duration.",
       "enum": [
        "any",
        "long",
        "medium",
        "short"
       ],
       "enumDescriptions": [
        "Do not filter video search results based on their duration. This is the default value.",
        "Only include videos longer than 20 minutes.",
        "Only include videos that are between four and 20 minutes long (inclusive).",
        "Only include videos that are less than four minutes long."
       ],
       "location": "query"
      },
      "videoEmbeddable": {
       "type": "string",
       "description": "The videoEmbeddable parameter lets you to restrict a search to only videos that can be embedded into a webpage.",
       "enum": [
        "any",
        "true"
       ],
       "enumDescriptions": [
        "Return all videos, embeddable or not.",
        "Only retrieve embeddable videos."
       ],
       "location": "query"
      },
      "videoLicense": {
       "type": "string",
       "description": "The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos.",
       "enum": [
        "any",
        "creativeCommon",
        "youtube"
       ],
       "enumDescriptions": [
        "Return all videos, regardless of which license they have, that match the query parameters.",
        "Only return videos that have a Creative Commons license. Users can reuse videos with this license in other videos that they create. Learn more.",
        "Only return videos that have the standard YouTube license."
       ],
       "location": "query"
      },
      "videoSyndicated": {
       "type": "string",
       "description": "The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com.",
       "enum": [
        "any",
        "true"
       ],
       "enumDescriptions": [
        "Return all videos, syndicated or not.",
        "Only retrieve syndicated videos."
       ],
       "location": "query"
      },
      "videoType": {
       "type": "string",
       "description": "The videoType parameter lets you restrict a search to a particular type of videos.",
       "enum": [
        "any",
        "episode",
        "movie"
       ],
       "enumDescriptions": [
        "Return all videos.",
        "Only retrieve episodes of shows.",
        "Only retrieve movies."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "part"
     ],
     "response": {
      "$ref": "SearchListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/youtube",
      "https://www.googleapis.com/auth/youtube.force-ssl",
      "https://www.googleapis.com/auth/youtube.readonly",
      "https://www.googleapis.com/auth/youtubepartner"
     ]
    }
   }
  }
 }
}
